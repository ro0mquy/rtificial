#ifndef STRAHLENWERK_EXPORT
#define STRAHLENWERK_EXPORT
#include "Shader.h"
#include "Framebuffer.h"
#include "Scene.h"
#include "Sequence.h"
#include "Uniform.h"
#include "shaders/upscale.h"
#include "shaders/bloom_down_1st.h"
#include "shaders/bloom_down_2nd.h"
#include "shaders/bloom_down_3rd.h"
#include "shaders/bloom_down_4th.h"
#include "shaders/bloom_down_5th.h"
#include "shaders/bloom_up_5th.h"
#include "shaders/bloom_up_4th.h"
#include "shaders/bloom_up_3rd.h"
#include "shaders/bloom_up_2nd.h"
#include "shaders/bloom_up_1st.h"
#include "shaders/bloom_up_final.h"
#include "shaders/tonemap.h"
#include "shaders/final.h"
#include "shaders/fxaa.h"
#include "shaders/biene.h"
#include "shaders/body.h"
#include "shaders/environment.h"
#include "shaders/fluegel.h"
#include "shaders/mienenkraft.h"
#include "shaders/shapemorph.h"
Input upscale_inputs[1] = {
	{0, 0},
};
Input bloom_down_1st_inputs[1] = {
	{2, 0},
};
Input bloom_down_2nd_inputs[1] = {
	{3, 0},
};
Input bloom_down_3rd_inputs[1] = {
	{4, 0},
};
Input bloom_down_4th_inputs[1] = {
	{5, 0},
};
Input bloom_down_5th_inputs[1] = {
	{6, 0},
};
Input bloom_up_5th_inputs[1] = {
	{7, 0},
};
Input bloom_up_4th_inputs[2] = {
	{6, 0},
	{8, 0},
};
Input bloom_up_3rd_inputs[2] = {
	{5, 0},
	{9, 0},
};
Input bloom_up_2nd_inputs[2] = {
	{4, 0},
	{10, 0},
};
Input bloom_up_1st_inputs[2] = {
	{3, 0},
	{11, 0},
};
Input bloom_up_final_inputs[2] = {
	{0, 0},
	{12, 0},
};
Input tonemap_inputs[1] = {
	{13, 0},
};
Input final_inputs[1] = {
	{14, 0},
};
Input fxaa_inputs[1] = {
	{15, 0},
};
Shader postproc[15] = {
	Shader(upscale_source, 1, upscale_inputs),
	Shader(bloom_down_1st_source, 1, bloom_down_1st_inputs),
	Shader(bloom_down_2nd_source, 1, bloom_down_2nd_inputs),
	Shader(bloom_down_3rd_source, 1, bloom_down_3rd_inputs),
	Shader(bloom_down_4th_source, 1, bloom_down_4th_inputs),
	Shader(bloom_down_5th_source, 1, bloom_down_5th_inputs),
	Shader(bloom_up_5th_source, 1, bloom_up_5th_inputs),
	Shader(bloom_up_4th_source, 2, bloom_up_4th_inputs),
	Shader(bloom_up_3rd_source, 2, bloom_up_3rd_inputs),
	Shader(bloom_up_2nd_source, 2, bloom_up_2nd_inputs),
	Shader(bloom_up_1st_source, 2, bloom_up_1st_inputs),
	Shader(bloom_up_final_source, 2, bloom_up_final_inputs),
	Shader(tonemap_source, 1, tonemap_inputs),
	Shader(final_source, 1, final_inputs),
	Shader(fxaa_source, 1, fxaa_inputs),
};
Shader scenes[6] = {
	Shader(biene_source, 0, nullptr),
	Shader(body_source, 0, nullptr),
	Shader(environment_source, 0, nullptr),
	Shader(fluegel_source, 0, nullptr),
	Shader(mienenkraft_source, 0, nullptr),
	Shader(shapemorph_source, 0, nullptr),
};
Output input_outputs[2] = {
	{3, 0, 0},
	{1, 1, 0},
};
Output upscale_outputs[1] = {
	{3, 2, 0},
};
Output bloom_down_1st_outputs[1] = {
	{3, 3, 0},
};
Output bloom_down_2nd_outputs[1] = {
	{3, 4, 0},
};
Output bloom_down_3rd_outputs[1] = {
	{3, 5, 0},
};
Output bloom_down_4th_outputs[1] = {
	{3, 6, 0},
};
Output bloom_down_5th_outputs[1] = {
	{3, 7, 0},
};
Output bloom_up_5th_outputs[1] = {
	{3, 8, 0},
};
Output bloom_up_4th_outputs[1] = {
	{3, 9, 0},
};
Output bloom_up_3rd_outputs[1] = {
	{3, 10, 0},
};
Output bloom_up_2nd_outputs[1] = {
	{3, 11, 0},
};
Output bloom_up_1st_outputs[1] = {
	{3, 12, 0},
};
Output bloom_up_final_outputs[1] = {
	{3, 13, 0},
};
Output tonemap_outputs[1] = {
	{3, 14, 0},
};
Output final_outputs[1] = {
	{3, 15, 0},
};
Framebuffer fbos[15] = {
	Framebuffer(0, 2, input_outputs),
	Framebuffer(0, 1, upscale_outputs),
	Framebuffer(1, 1, bloom_down_1st_outputs),
	Framebuffer(2, 1, bloom_down_2nd_outputs),
	Framebuffer(3, 1, bloom_down_3rd_outputs),
	Framebuffer(4, 1, bloom_down_4th_outputs),
	Framebuffer(5, 1, bloom_down_5th_outputs),
	Framebuffer(5, 1, bloom_up_5th_outputs),
	Framebuffer(4, 1, bloom_up_4th_outputs),
	Framebuffer(3, 1, bloom_up_3rd_outputs),
	Framebuffer(2, 1, bloom_up_2nd_outputs),
	Framebuffer(1, 1, bloom_up_1st_outputs),
	Framebuffer(0, 1, bloom_up_final_outputs),
	Framebuffer(0, 1, tonemap_outputs),
	Framebuffer(0, 1, final_outputs),
};
Scene scenes_data[6] = {
	{1000, 13000, 4},
	{16000, 26000, 5},
	{32000, 58000, 1},
	{64000, 76000, 3},
	{80000, 89000, 0},
	{92000, 100000, 2},
};
float keyframe_data[129] = {
	-0.050000,
	0.315000,
	15.716000,
	0.774000,
	0.498000,
	0.810000,
	2.541000,
	1.309000,
	0.519000,
	1.000000,
	0.964000,
	1.145000,
	0.082000,
	2.062000,
	0.669000,
	0.112000,
	9.034000,
	2.283000, 0.539000,
	2.889000,
	3.995000,
	11.216000,
	11.944000,
	4.853000,
	-0.684000,
	0.081000,
	2.877000,
	1.000000,
	0.000000,
	1.000000,
	2.000000,
	0.880000,
	1.639000,
	-23.299999,
	1.550000,
	1.550000,
	-23.299999,
	-6.000000,
	1.550000,
	0.021000,
	0.000000, 0.000000, 0.000000,
	0.000000, 0.000000, 0.000000, 1.000000,
	0.100000,
	3.000000,
	0.050000,
	0.000000,
	20.000000,
	3.000000,
	20.000000,
	0.787000,
	4.415000,
	40.000000,
	5.688000,
	10.000000, 8.000000, 10.000000,
	0.287000,
	1.872000,
	8.475000, 7.598000, 8.666000,
	0.301000,
	-0.442523, -0.777447, 0.104226, 0.434610,
	0.363000,
	0.683000,
	0.283000,
	0.053423, -0.979907, 0.064569, -0.180995,
	-0.745000, -0.347000, -0.249000,
	0.319000,
	0.791000,
	0.287000,
	-0.103003, -0.154307, 0.021008, -0.982415,
	-0.237000, -1.087000, -0.515000,
	7.000000,
	1.000000,
	5.000000,
	0.234845, 0.771635, -0.201995, 0.555540,
	3.860000,
	3.000000,
	0.000000,
	3.000000,
	0.900000,
	0.500000,
	1.200000,
	1.000000, 1.000000, 1.000000,
	1.000000, 1.000000, 1.000000,
	0.004120, 0.031550, 0.019920,
	0.180000, 0.180000, 0.180000,
	0.000000, 0.000000, 0.000000,
	0.363000,
	0.020000,
	1.378000,
	0.014000,
	0.007000,
	0.000000,
	3.107000,
	0.000000,
	0.700000,
};
Sequence sequence_data[7] = {
	{32000, 40000, 1, 2},
	{56000, 58000, 0, 2},
	{42000, 56000, 2, 3},
	{69000, 76000, 2, 3},
	{16000, 24000, 1, 2},
	{16000, 26000, 0, 2},
	{16000, 26000, 0, 2},
};
int sequence_index[78] = {
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	1,
	1,
	1,
	1,
	3,
	3,
	3,
	3,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	4,
	5,
	5,
	5,
	5,
	5,
	6,
	6,
	6,
	6,
	6,
	6,
	6,
	7,
	7,
};
int keyframe_index[78] = {
	0,
	1,
	2,
	3,
	4,
	5,
	6,
	7,
	8,
	9,
	10,
	11,
	12,
	13,
	14,
	15,
	16,
	17,
	19,
	20,
	21,
	22,
	23,
	24,
	25,
	26,
	27,
	30,
	31,
	32,
	33,
	39,
	40,
	43,
	47,
	51,
	52,
	53,
	54,
	55,
	56,
	57,
	58,
	61,
	62,
	63,
	66,
	67,
	71,
	72,
	73,
	74,
	78,
	81,
	82,
	83,
	84,
	88,
	91,
	92,
	93,
	94,
	98,
	99,
	102,
	103,
	104,
	105,
	108,
	117,
	120,
	121,
	122,
	123,
	124,
	125,
	128,
	129,
};
Uniform uniforms[77] = {
	{0, 81 },
	{0, 97 },
	{0, 91 },
	{0, 87 },
	{0, 96 },
	{0, 82 },
	{0, 89 },
	{0, 90 },
	{0, 101 },
	{0, 84 },
	{0, 98 },
	{0, 93 },
	{0, 95 },
	{0, 85 },
	{0, 94 },
	{0, 83 },
	{0, 86 },
	{1, 80 },
	{0, 78 },
	{0, 102 },
	{0, 92 },
	{0, 99 },
	{0, 77 },
	{0, 100 },
	{0, 79 },
	{0, 88 },
	{0, 108 },
	{0, 106 },
	{0, -1 },
	{0, -1 },
	{0, 107 },
	{0, 105 },
	{2, 103 },
	{5, 104 },
	{0, 109 },
	{0, 121 },
	{0, 115 },
	{0, 119 },
	{0, 127 },
	{0, 116 },
	{0, 128 },
	{0, 117 },
	{2, 110 },
	{0, 118 },
	{0, 120 },
	{2, 123 },
	{0, 114 },
	{5, 133 },
	{0, 129 },
	{0, 125 },
	{0, 111 },
	{5, 126 },
	{2, 113 },
	{0, 132 },
	{0, 124 },
	{0, 131 },
	{5, 130 },
	{2, 122 },
	{0, 112 },
	{0, -1 },
	{0, 138 },
	{5, 137 },
	{0, 134 },
	{0, 135 },
	{0, 136 },
	{0, 65 },
	{0, 64 },
	{4, 76 },
	{4, 75 },
	{4, 74 },
	{0, 71 },
	{0, 70 },
	{0, 72 },
	{0, 67 },
	{0, 68 },
	{0, 73 },
	{0, 69 },
};
int keyframe_time[16] = {
	0,
	8000,
	0,
	2000,
	0,
	8000,
	14000,
	0,
	5000,
	7000,
	0,
	8000,
	0,
	10000,
	0,
	10000,
};
int keyframe_time_index[78] = {
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	2,
	2,
	2,
	2,
	7,
	7,
	7,
	7,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	12,
	12,
	12,
	12,
	12,
	14,
	14,
	14,
	14,
	14,
	14,
	14,
	16,
	16,
};
#endif
