#ifndef final_H
#define final_H
const char final_source[] =R"shader_source(#version 430
)shader_source"
R"shader_source(layout(location=86)uniform float f;uint i(uint v){return v=v+2127912214+(v<<12),v=v^-949894596^v>>19,v=v+374761393+(v<<5),v=v+-744332180^v<<9,v=v+-42973499+(v<<3),v=v^-1252372727^v>>16,v;}vec3 v[12]=vec3[12](vec3(1,1,0),vec3(-1,1,0),vec3(1,-1,0),vec3(-1,-1,0),vec3(1,0,1),vec3(-1,0,1),vec3(1,0,-1),vec3(-1,0,-1),vec3(0,1,1),vec3(0,-1,1),vec3(0,1,-1),vec3(0,-1,-1));float t(uint v){return float(v%(1<<20))/float(1<<20);}float x(int v){return t(i(v));}float r(ivec2 v){return t(i(v.x+i(v.y)));}float n(ivec3 v){return t(i(v.x+i(v.y+i(v.z))));}float s(float v){int y=int(floor(v));float x=fract(v),m=Z(y),n=Z(y+1);return mix(m,n,x);}float m(vec2 v){ivec2 y=ivec2(floor(v));vec2 n=fract(v);float f=0,m=Z(y),l=Z(y+ivec2(0,1)),x=Z(y+ivec2(1,0)),s=Z(y+ivec2(1,1));return mix(mix(m,x,n.x),mix(l,s,n.x),n.y)*2.-1.;}float d(vec3 v){ivec3 y=ivec3(floor(v));vec3 n=fract(v);float f=0,m=Z(y),l=Z(y+ivec3(0,1,0)),x=Z(y+ivec3(1,0,0)),s=Z(y+ivec3(1,1,0)),i=Z(y+ivec3(0,0,1)),u=Z(y+ivec3(0,1,1)),d=Z(y+ivec3(1,0,1)),z=Z(y+ivec3(1,1,1));return mix(mix(mix(m,x,n.x),mix(l,s,n.x),n.y),mix(mix(i,d,n.x),mix(u,z,n.x),n.y),n.z)*2.-1.;}float p(vec2 y){float x=.5*(sqrt(3.)-1.);ivec2 f=ivec2(floor(y+(y.x+y.y)*x));float n=(3.-sqrt(3.))/6.;y-=f-(f.x+f.y)*n;ivec2 m=y.x>y.y?ivec2(1,0):ivec2(0,1);vec2 s[3]=vec2[3](y,y-m+n,y-1.+2.*n);ivec3 l=ivec3(f.x)+ivec3(0,m.x,1),u=ivec3(f.y)+ivec3(0,m.y,1);float r=0;for(uint z=0;z<3;z++){float Z=max(0,.5-s[z].x*s[z].x-s[z].y*s[z].y);Z*=Z;uint t=i(l[z]+i(u[z]))%12;r+=Z*Z*dot(v[t].xy,s[z]);}return 70.*r;}float g(vec3 y){float x=1./3.,n=1./6.;ivec3 f=ivec3(floor(y+(y.x+y.y+y.z)*x));y-=f-(f.x+f.y+f.z)*n;vec3 m=step(y.yzx,y);ivec3 z=ivec3(min(m,(1.-m).zxy)),s=ivec3(max(m,(1.-m).zxy));vec3 d[4]=vec3[4](y,y-z+n,y-s+2.*n,y-1.+3.*n);int l[4]=int[4](f.x,f.x+z.x,f.x+s.x,f.x+1),u[4]=int[4](f.y,f.y+z.y,f.y+s.y,f.y+1),c[4]=int[4](f.z,f.z+z.z,f.z+s.z,f.z+1);float r=0;for(uint t=0;t<4;t++){float Z=max(0.,.6-d[t].x*d[t].x-d[t].y*d[t].y-d[t].z*d[t].z);Z*=Z;uint g=i(l[t]+i(u[t]+i(c[t])))%12;r+=Z*Z*dot(v[g],d[t]);}return 32.*r;}float w(vec2 v){float y=0.;for(int f=0;f<3;f++)y+=exp2(-f)*d(v),v*=2.;return y/1.75;}float o(vec3 v){float y=0.;for(int f=0;f<3;f++)y+=exp2(-f)*d(v),v*=2.;return y/1.75;}float e(vec2 v){float y=0.;for(int f=0;f<3;f++)y+=exp2(-f)*g(v),v*=2.;return y/1.75;}float c(vec3 v){float y=0.;for(int f=0;f<3;f++)y+=exp2(-f)*g(v),v*=2.;return y/1.75;}in vec2 y;layout(location=0)uniform vec2 a;layout(binding=28)uniform sampler2D l;layout(location=0)out vec3 u;layout(location=66)uniform float z;layout(location=87)uniform float F;layout(location=88)uniform float C;layout(location=89)uniform float b;layout(location=90)uniform float q;layout(location=91)uniform float L;layout(location=92)uniform float D;vec2 c(float y,float v,float f,vec2 i){i=i*2.-1.;float n=y*y*(i.x*i.x)+i.y*i.y,z=y*y+1.,x=v+f*sqrt(2.),m=(1.+n*x)/(1.+z*x);return m*i*.5+.5;}float c(float y,vec2 f){float v=1.-y;f.y*=-1.;return v+y*16.*f.x*f.y*(1.-f.x)*(-1.-f.y);}float Z(vec2 v){return fract(sin(dot(v.xy,vec2(12.9898,78.233)))*43758.5);}vec2 Y(float v){return v*=6.28319,vec2(cos(v),sin(v));}vec2 X(vec2 v){return v*v*v*(v*(v*6.-15.)+10.);}float W(vec2 v){vec2 y=fract(v),f=floor(v),n=vec2(0.,1.);vec4 m=vec4(dot(Y(Z(f+n.xx)),y-n.xx),dot(Y(Z(f+n.xy)),y-n.xy),dot(Y(Z(f+n.yx)),y-n.yx),dot(Y(Z(f+n.yy)),y-n.yy));vec2 s=X(y);return mix(mix(m[0],m[2],s.x),mix(m[1],m[3],s.x),s.y);}float V(vec2 v){return(W(v)+W(v*2.)*.5+W(v*4.)*.25)/1.75;}float U=.15,T=.5,S=.1,R=.2,Q=.02,P=.3,O=11.2;vec3 N(vec3 v){return(v*(U*v+S*T)+R*Q)/(v*(U*v+T)+R*P)-Q/P;}void main(){vec3 v;float n=F,m=C,s=a.x/a.y;vec3 d=vec3(610.,550.,440.)/440.;for(int t=0;t<3;t++)v[t]=textureLod(l,c(s,n*d[t],m,y),0.)[t];vec2 x=y+vec2(1,0)*g(vec2(z*10,gl_FragCoord.y))*f;v*=c(b,x);float i=radians(30.),Z=radians(60.);vec3 t=vec3(V(vec2(L*(gl_FragCoord.xy+3289.+z*2938.))),V(vec2(L*(mat2(cos(i),-sin(i),sin(i),cos(i))*gl_FragCoord.xy+z*2738.))),V(vec2(L*(mat2(cos(Z),-sin(Z),sin(Z),cos(Z))*gl_FragCoord.xy+93829.+z*2847.))));float r=clamp(dot(v,vec3(.299,.587,.114)),0.,1.),R=q*pow(1.-r,D);u=v+R*t;u=N(u*2)/N(vec3(O));}
)shader_source";
#endif
